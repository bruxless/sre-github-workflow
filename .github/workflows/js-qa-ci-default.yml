name: Playwright Tests

on:
  workflow_call:
    inputs:
      slack_channel_id_qa:
        description: "The QA Slack channel's id"
        type: string
        required: true
      runner:
        description: "Runner to use to run tests"
        type: string
        required: true
      container:
        description: "Container to use to run tests"
        type: string
        required: true
      environment:
        description: "Tested environment"
        type: string
        required: true
      enabled_deployments_version_fetching:
        description: "Enabled deployments version fetching"
        type: boolean
        default: true
    secrets:
      SLACK_BOT_TOKEN:
        description: "The slack bot token"
        required: true
# secret must be named <env>_env_file (for exemple qa_env_file) and must contains all variable for the given env.
# content exemple:
# ENV=qa
# KUBE_NAMESPACE=bruxless-dev
# AUTH_URL=https://auth.dev.bruxless.rocks/
# REALM_NAME=bruxless-dev
# API_URL=https://api.dev.bruxless.rocks/
# WEBCONSOLE_URL=https://webconsole.dev.bruxless.rocks/
# USERNAME_PATIENT=patient
# PASSWORD_PATIENT=patient
# USERNAME_ADMINFULL=admin_full
# PASSWORD_ADMINFULL=admin_full
# CLIENT_ID=api_test
# CLIENT_SECRET=toto
      ENV_FILE:
        description: "The env file, containing variables and secrets for the environments"
        required: true

jobs:
  retrieveDeployments:
    timeout-minutes: 10
    runs-on: ${{ inputs.runner }}
    container: "bitnami/kubectl:1.31"

    steps:
      - name: Set .env file
        if: ${{ inputs.enabled_deployments_version_fetching == true }}
        run: |
          cat << EOF > .env
          ${{ secrets.ENV_FILE }}
          EOF

      - name: Extract environment
        if: ${{ inputs.enabled_deployments_version_fetching == true }}
        id: get_env
        run: |
          echo "environment=$(grep "^KUBE_NAMESPACE=" .env | cut -d '=' -f2)" >> $GITHUB_OUTPUT

      - name: Retrieve deployments versions
        if: ${{ inputs.enabled_deployments_version_fetching == true }}
        run: |
          kubectl -n ${{ steps.get_env.outputs.environment }} get deployments,statefulsets,cronjobs,jobs -o json | jq '[.items[] | select(.metadata.labels."app.kubernetes.io/managed-by"=="Helm") | {name: .metadata.name, chartVersion: .metadata.labels."helm.sh/chart", version: .metadata.labels."app.kubernetes.io/version"}]'  > deployment-versions.json

      - name: Upload deployments versions as artefact
        if: ${{ inputs.enabled_deployments_version_fetching == true }}
        uses: actions/upload-artifact@v4
        with:
          name: deployment-versions
          path: deployment-versions.json

  test:
    timeout-minutes: 60

    runs-on: ${{ inputs.runner }}
    container: ${{ inputs.container }}

    needs: retrieveDeployments
    steps:
      # Checkout project
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      # Setup and uses
      - name: Set up node
        uses: actions/setup-node@v5
        with:
          cache: npm

      - name: Set up JDK 21
        uses: actions/setup-java@v5.0.0
        with:
          java-version: 21
          distribution: 'temurin'

      # Slack message
      - name: Slack - ci - started
        id: slack
        uses: slackapi/slack-github-action@v2.1.1
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            channel: ${{ inputs.slack_channel_id_ci }}
            attachments:
              - color: "#62a0ea"
                fallback: "QA Job '${{ github.workflow }}' started on ${{ inputs.environment }} env"
                blocks:
                  - type: header
                    text:
                      type: plain_text
                      text: ":the_horns:${{ github.repository }}"
                      emoji: true
                  - type: section
                    text:
                      text: "QA Job '<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ github.workflow }}>' started on ${{ inputs.environment }} env"
                      type: mrkdwn
                    fields:
                      - type: mrkdwn
                        text: "*Status*"
                      - type: mrkdwn
                        text: "*Actor*"
                      - type: mrkdwn
                        text: "In progress"
                      - type: mrkdwn
                        text: "${{ github.triggering_actor }}"  

      - name: Set .env file
        run: |
          cat << EOF > .env
          ${{ secrets.ENV_FILE }}
          EOF

      - name: Download deployments versions as artefact
        if: ${{ inputs.enabled_deployments_version_fetching == true }}
        uses: actions/download-artifact@v5
        continue-on-error: true
        with:
          name: deployment-versions

      - name: Install dependencies
        run: |
          CI=1 \
          npm ci

      - name: Pre Acceptance Tests
        run: |
          CI=1 \
          npm run pre-test

      - name: Run Acceptance Tests
        run:  |
          CI=1 \
          ENV=${{ inputs.environment }} \
          npm run test

      - name: Post Acceptance Tests
        if: ${{ !cancelled() }}
        run: |
          CI=1 \
          npm run post-test

      - name: Upload Acceptance Results
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: test-reports
          path: target/test-reports/
          retention-days: 30

      - name: NodeJS lint
        run: npm run lint
      - name: Lint upload result npm
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: npm
          path: ${{github.workspace}}/target/eslint_npm.sarif

      - name: NodeJS CycloneDX
        run: npm run cyclonedx
      - name: CycloneDX upload result
        uses: actions/upload-artifact@v4
        with:
          name: cyclonedx-bom
          path: ${{github.workspace}}/target/bom.*

      # Slack message if succeed
      - name: Slack - ci - succeed
        if: success()
        uses: slackapi/slack-github-action@v2.1.1
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            channel: ${{ inputs.slack_channel_id_ci }}
            attachments:
              - color: "#57e389"
                fallback: "QA Job '${{ github.workflow }}' succeed on ${{ inputs.environment }} env"
                blocks:
                  - type: header
                    text:
                      type: plain_text
                      text: ":clap:${{ github.repository }}"
                      emoji: true
                  - type: section
                    text:
                      text: "QA Job '<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ github.workflow }}>' succeed on ${{ inputs.environment }} env"
                      type: mrkdwn
                    fields:
                      - type: mrkdwn
                        text: "*Status*"
                      - type: mrkdwn
                        text: "*Actor*"
                      - type: mrkdwn
                        text: "Succeed"
                      - type: mrkdwn
                        text: "${{ github.triggering_actor }}"              

      # Slack message if failed
      - name: Slack - ci - failed
        if: failure()
        uses: slackapi/slack-github-action@v2.1.1
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            channel: ${{ inputs.slack_channel_id_ci }}
            attachments:
              - color: "#ed333b"
                fallback: "QA Job '${{ github.workflow }}' failed on ${{ inputs.environment }} env"
                blocks:
                  - type: header
                    text:
                      type: plain_text
                      text: ":clap:${{ github.repository }}"
                      emoji: true
                  - type: section
                    text:
                      text: "QA Job '<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ github.workflow }}>' failed on ${{ inputs.environment }} env"
                      type: mrkdwn
                    fields:
                      - type: mrkdwn
                        text: "*Status*"
                      - type: mrkdwn
                        text: "*Actor*"
                      - type: mrkdwn
                        text: "Failed"
                      - type: mrkdwn
                        text: "${{ github.triggering_actor }}"